---
sds_version: nvr
valid_objects:
- obj1
- obj2

object_details:
  obj1:
    attrs: ["attr1", "attr2"]
    atoms: ["atom1", "atom2"] #An atom/action is the smallest unit, An atom is expected to name desired input values (requirements) and name outputs (provided values).
    attr1:
      datatype: String
      value: "/etcd/key or value can be obtained by running a pre defined flow in sds_operations.yaml"
      help: "Help attr1"
    atom1:
      help: "Atom help"
      pre_run: []
      post_run: []
      provides: "A set, string or list of items that this will be providing
      (or could provide) to others, used to correlate and associate the things this atom produces, if it produces anything at all."
      name: "Meaningful name for this atom, should be something that is distinguishable and understandable for notification, debugging, storing and any other similar purposes"
      inject: "An immutable input_name => value dictionary which specifies
      any initial inputs that should be automatically injected into the atoms scope before the atom execution commences (this allows for providing atom local values that do not need to be provided by other atoms/dependents)."
      requires: "A set or list of required inputs for this atomâ€™s execute method"

flow: #A flow/operation is a structure that defines relationships between atoms. You can add atoms and other flows (as subflows) to the flow, and the flow provides a way to implicitly or explicitly define how they are interdependent, flows can be linear, unordered, graph based
  name: A non-unique name for this flow
  atoms: A OrderedSet of atoms to be executed in this flow
  conditions: 
    pre_condition : ["obj1.attr_is_<condition>"]
    post_condition: ["obj1.attr_is_<condition>", "obj2.attr_is_<condition>"]
  
